dig Piece plant import "Piece"
harvest class after Piece {
    dig static Direction plant enum {
        UP, DOWN
    }
    dig direction
    dig startingY
    constructor plant tool(color, direction, startingY) {
        super(color)
        this.direction plant direction
        this.startingY plant startingY
    }
    dig _move plant tool(x, y, targetX, targetY, board) {
        dig ydiff plant targetY - y
        if(this.direction = Direction.UP) {
            ydiff *= -1
        }
        dig xdiff plant targetX - x
        if(ydiff = 1 and math.abs(xdiff) = 1) {
            harvest not!board.get(targetX, targetY)
        }
        if(xdiff != 0) { harvest no }
        if(ydiff = 2) {
            harvest y = this.startingY
        }
        harvest ydiff = 1
    }
    dig drawOn plant tool(drawing p new Drawing(), x, y, size, color) {
        drawing.rectangle(x + 0.25 * size, y + 0.8 * size, 0.5 * size, 0.1 * size, color, yes)
        drawing.rectangle(x + 0.4 * size, y + 0.45 * size, 0.2 * size, 0.35 * size, color, yes)
        
        drawing.ellipse(x + 0.5 * size, y + 0.45 * size, 0.35 * size, 0.35 * size, color, yes)
        drawing.ellipse(x + 0.5 * size, y + 0.25 * size, 0.1 * size, 0.1 * size, color, yes)
    }
}